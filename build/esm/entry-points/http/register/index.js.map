{"version":3,"sources":["../../../../../src/data-access/models/register.model.ts","../../../../../src/entry-points/http/register/index.ts"],"sourcesContent":["import mongoose from \"mongoose\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst registerSchema = new mongoose.Schema<any>({\n  student_id: {\n    type: String,\n    required: true,\n    default: uuidv4(),\n  },\n  name: {\n    type: String,\n    required: true,\n  },\n  email: {\n    type: String,\n    required: true,\n  },\n  mobile_number: {\n    type: String,\n    required: true,\n  },\n  college_name: {\n    type: String,\n    required: true,\n  },\n  overall_cgpa: {\n    type: String,\n    required: true,\n  },\n  course: {\n    type: String,\n    default: \"Front end\",\n    enum: [\"Front end\", \"Python\", \"My SQL\", \"Digital Marketing\"],\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n});\n\nexport const Register_Model = mongoose.model<any>(\"Student\", registerSchema);\n","import { Register_Model } from \"@/data-access/models/register.model\";\nimport type {\n  FastifyPluginAsyncTypebox,\n  TypeBoxTypeProvider,\n} from \"@fastify/type-provider-typebox\";\n\nconst advertisement: FastifyPluginAsyncTypebox = async (\n  fastify,\n  opts\n): Promise<void> => {\n  fastify\n    .withTypeProvider<TypeBoxTypeProvider>()\n    .get(\"/\", async (request: any, reply: any) => {\n      try {\n        const response = await Register_Model.find();\n        return response;\n      } catch (error) {\n        return error;\n      }\n    })\n    .post(\"/\", async (request: any, reply) => {\n      try {\n        const { body } = request;\n        const new_student = await Register_Model.create(body);\n        if (new_student) {\n          return {\n            message: \"Registered successfully\",\n            data: new_student,\n          };\n        } else {\n          return {\n            message: \"Something went wrong\",\n          };\n        }\n      } catch (error) {\n        return error;\n      }\n    });\n};\n\nexport default advertisement;\n"],"mappings":";AAAA,OAAO,cAAc;AACrB,SAAS,MAAM,cAAc;AAE7B,IAAM,iBAAiB,IAAI,SAAS,OAAY;AAAA,EAC9C,YAAY;AAAA,IACV,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS,OAAO;AAAA,EAClB;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAAA,EACA,OAAO;AAAA,IACL,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAAA,EACA,eAAe;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAAA,EACA,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAAA,EACA,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAAA,EACA,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,MAAM,CAAC,aAAa,UAAU,UAAU,mBAAmB;AAAA,EAC7D;AAAA,EACA,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS,KAAK;AAAA,EAChB;AACF,CAAC;AAEM,IAAM,iBAAiB,SAAS,MAAW,WAAW,cAAc;;;AClC3E,IAAM,gBAA2C,OAC/C,SACA,SACkB;AAClB,UACG,iBAAsC,EACtC,IAAI,KAAK,OAAO,SAAc,UAAe;AAC5C,QAAI;AACF,YAAM,WAAW,MAAM,eAAe,KAAK;AAC3C,aAAO;AAAA,IACT,SAAS,OAAO;AACd,aAAO;AAAA,IACT;AAAA,EACF,CAAC,EACA,KAAK,KAAK,OAAO,SAAc,UAAU;AACxC,QAAI;AACF,YAAM,EAAE,KAAK,IAAI;AACjB,YAAM,cAAc,MAAM,eAAe,OAAO,IAAI;AACpD,UAAI,aAAa;AACf,eAAO;AAAA,UACL,SAAS;AAAA,UACT,MAAM;AAAA,QACR;AAAA,MACF,OAAO;AACL,eAAO;AAAA,UACL,SAAS;AAAA,QACX;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AACL;AAEA,IAAO,mBAAQ;","names":[]}